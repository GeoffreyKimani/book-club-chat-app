        kwargs = {
            'book_club_name': request.form['book_club_name'],
            'book_name': request.form['book_name'],
            'book_author': request.form['book_author'],
            'book_isbn': request.form['book_isbn'],
            'book_category': request.form['book_category'],
            'book_review': request.form['book_review'],
            'password': request.form['password'],
            'secret_key': request.form['secret_key']
        }


        # @login_bp.before_request
# def before_request():
#     g.user = None
#     if 'user' in session:
#         g.user = session['user']
#         return redirect(url_for('chatter_bp.show_posts'))

# def home():
#     kwargs = {
#         'title': request.form['title'],
#         'text': request.form['text']
#     }
#     show_posts()
#     # add_post(form)


                # cursor.execute('UPDATE book_club_user SET book_club_id = (%s) '
                #                ' WHERE email = (%s)', (last_book_club_inserted, user_id))

                                        <!--&lt;!&ndash;book club name&ndash;&gt;-->
                        <!--<div class="form-group">-->
                            <!--<label for="book_club_name">Name</label>-->
                            <!--{{ form.book_club_name(class="form-control", placeholder="Enter Book Club Name Here") }}-->
                            <!--{% if form.book_club_name.errors %}-->
                                <!--<ul class="error">-->
                                    <!--{% for error in form.book_club_name.errors %}-->
                                        <!--<li>{{error}}</li>-->
                                    <!--{% endfor %}-->
                                <!--</ul>-->
                            <!--{% endif %}-->
                        <!--</div>-->

                                    # # get the user who made the post
            # session['post'] = session.get(user_email)
            #
            # cursor.execute('SELECT a.username FROM user a JOIN user_post b USING (email) WHERE (email, b.post_id) = (%s, %s)',
            #                (user_email, last_post_id))
            # username = format_db_string(str(cursor.fetchone()))
            # print(username)

            # def check_user_posts():
#     from ChatApp import mysql
#     connection = mysql.connect()
#     cursor = connection.cursor()
#
#     cursor.execute('SELECT email FROM user WHERE username=(%s)', session['user'])
#     user_email = format_db_string(str(cursor.fetchone()))
#     print(user_email)
#
#     cursor.execute('SELECT a.username FROM user a JOIN user_post b USING (email) WHERE email = (%s)',
#                    user_email)
#     username = format_db_string(str(cursor.fetchone()))
#
#     cursor.close()
#     connection.close()
#
#     return username


        # """to fetch user specific posts, we need to decouple the book clubs and get the active book club a user is in
        # at the moment """
        # # first create a session key-value pair storing the book_club_id and book_id
        # # cursor.execute('SELECT ')


                cursor.execute('SELECT (email) FROM user WHERE username = (%s)', session['user'])
        user_id = str(cursor.fetchone())
        user_email = format_db_string(user_id)


        list items iteration
    book_club_list = []
    6SBcg5brnJRn
    for item in range(len(book_club)):
        book_club_list = book_club[item]
        print(book_club_list)

gG.d;3f%]q(q


# @dashboard_bp.route('/admin-approve-join-requests')
# def admin_dashboard():
#     page_title = 'Approve Join Request'
#Kx+9V+QjVCu
#     return render_template('admin_dashboard.html', page_title=page_title)